<?php

namespace AppBundle\Entity;

/**
 * GoodsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GoodsRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $priceTypeId
     * @return mixed
     */
    public function queryGoodsWithPriceAndPictures($priceTypeId)
    {
        $em = $this->getEntityManager();
        $connection = $em->getConnection();

        $query = "
        SELECT
          g.title,
          p.price,
          GROUP_CONCAT(ph.basename SEPARATOR ';') as pictures
        FROM
            `goods` g
        LEFT JOIN prices p ON p.goods_id = g.id
        INNER JOIN photos ph on ph.goods_id = p.id
        WHERE
	      p.price_type_id = :price_type_id
	    GROUP BY p.id
        ";

        $statement = $connection->prepare($query);
        $statement->bindValue(':price_type_id', $priceTypeId);
        $statement->execute();
        $results = $statement->fetchAll();

        return $results;
    }

    /**
     * @param $priceTypeId
     * @return mixed
     *
     * 2. Реализовать контроллер, который получает  список товаров с ценой типа 1, в виде массива сущностей Doctrine 2.
     *
     */
    public function queryGoodsWithPriceORM($priceTypeId)
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT g, p
     FROM AppBundle:Goods g
     JOIN AppBundle:Prices p
     WHERE p.priceTypeId = :price_type_id'
        )->setParameter('price_type_id', $priceTypeId);

        $goods = $query->getResult();

        return $goods;
    }
}
